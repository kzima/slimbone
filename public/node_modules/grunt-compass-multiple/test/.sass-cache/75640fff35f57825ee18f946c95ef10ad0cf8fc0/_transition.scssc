3.2.7 (Media Mark)
77c479240b27e28f77813fb2a5017cc40bf3e30c
o:Sass::Tree::RootNode
:@template"¤ @import "shared";

// CSS Transitions
// Currently only works in Webkit.
//
// * expected in CSS3, FireFox 3.6/7 and Opera Presto 2.3
// * We'll be prepared.
//
// Including this submodule sets following defaults for the mixins:
//
//     $default-transition-property : all
//     $default-transition-duration : 1s
//     $default-transition-function : false
//     $default-transition-delay    : false
//
// Override them if you like. Timing-function and delay are set to false for browser defaults (ease, 0s).

$default-transition-property: all !default;

$default-transition-duration: 1s !default;

$default-transition-function: false !default;

$default-transition-delay: false !default;

$transitionable-prefixed-values: transform, transform-origin !default;

// One or more properties to transition
//
// * for multiple, use a comma-delimited list
// * also accepts "all" or "none"

@mixin transition-property($property-1: $default-transition-property,
  $property-2 : false,
  $property-3 : false,
  $property-4 : false,
  $property-5 : false,
  $property-6 : false,
  $property-7 : false,
  $property-8 : false,
  $property-9 : false,
  $property-10: false
) {
  @if type-of($property-1) == string { $property-1: unquote($property-1); }
  $properties: compact($property-1, $property-2, $property-3, $property-4, $property-5, $property-6, $property-7, $property-8, $property-9, $property-10);
  @if $experimental-support-for-webkit    {       -webkit-transition-property : prefixed-for-transition(-webkit, $properties); }
  @if $experimental-support-for-mozilla   {          -moz-transition-property : prefixed-for-transition(-moz,    $properties); }
  @if $experimental-support-for-opera     {            -o-transition-property : prefixed-for-transition(-o,      $properties); }
                                                          transition-property : $properties;
}

// One or more durations in seconds
//
// * for multiple, use a comma-delimited list
// * these durations will affect the properties in the same list position

@mixin transition-duration($duration-1: $default-transition-duration,
  $duration-2 : false,
  $duration-3 : false,
  $duration-4 : false,
  $duration-5 : false,
  $duration-6 : false,
  $duration-7 : false,
  $duration-8 : false,
  $duration-9 : false,
  $duration-10: false
) {
  @if type-of($duration-1) == string { $duration-1: unquote($duration-1); }
  $durations: compact($duration-1, $duration-2, $duration-3, $duration-4, $duration-5, $duration-6, $duration-7, $duration-8, $duration-9, $duration-10);
  @include experimental(transition-duration, $durations,
    -moz, -webkit, -o, not -ms, not -khtml, official
  );
}

// One or more timing functions
//
// * [ ease | linear | ease-in | ease-out | ease-in-out | cubic-bezier(x1, y1, x2, y2)]
// * For multiple, use a comma-delimited list
// * These functions will effect the properties in the same list position

@mixin transition-timing-function($function-1: $default-transition-function,
  $function-2 : false,
  $function-3 : false,
  $function-4 : false,
  $function-5 : false,
  $function-6 : false,
  $function-7 : false,
  $function-8 : false,
  $function-9 : false,
  $function-10: false
) {
  $function-1: unquote($function-1);
  $functions: compact($function-1, $function-2, $function-3, $function-4, $function-5, $function-6, $function-7, $function-8, $function-9, $function-10);
  @include experimental(transition-timing-function, $functions,
    -moz, -webkit, -o, not -ms, not -khtml, official
  );
}

// One or more transition-delays in seconds
//
// * for multiple, use a comma-delimited list
// * these delays will effect the properties in the same list position

@mixin transition-delay($delay-1: $default-transition-delay,
  $delay-2 : false,
  $delay-3 : false,
  $delay-4 : false,
  $delay-5 : false,
  $delay-6 : false,
  $delay-7 : false,
  $delay-8 : false,
  $delay-9 : false,
  $delay-10: false
) {
  @if type-of($delay-1) == string { $delay-1: unquote($delay-1); }
  $delays: compact($delay-1, $delay-2, $delay-3, $delay-4, $delay-5, $delay-6, $delay-7, $delay-8, $delay-9, $delay-10);
  @include experimental(transition-delay, $delays,
    -moz, -webkit, -o, not -ms, not -khtml, official
  );
}

// Transition all-in-one shorthand

@mixin single-transition(
  $property: $default-transition-property,
  $duration: $default-transition-duration,
  $function: $default-transition-function,
  $delay: $default-transition-delay
) {
  @include transition(compact($property $duration $function $delay));
}

@mixin transition(
  $transition-1 : default,
  $transition-2 : false,
  $transition-3 : false,
  $transition-4 : false,
  $transition-5 : false,
  $transition-6 : false,
  $transition-7 : false,
  $transition-8 : false,
  $transition-9 : false,
  $transition-10: false
) {
  @if $transition-1 == default {
    $transition-1 : compact($default-transition-property $default-transition-duration $default-transition-function $default-transition-delay);
  }
  $transitions: false;
  @if type-of($transition-1) == list and type-of(nth($transition-1,1)) == list {
    $transitions: join($transition-1, compact($transition-2, $transition-3, $transition-4, $transition-5, $transition-6, $transition-7, $transition-8, $transition-9, $transition-10), comma);
  } @else {
    $transitions : compact($transition-1, $transition-2, $transition-3, $transition-4, $transition-5, $transition-6, $transition-7, $transition-8, $transition-9, $transition-10);
  }
  $delays: comma-list();
  $has-delays: false;
  $webkit-value: comma-list();
  $moz-value: comma-list();
  $o-value: comma-list();

  // This block can be made considerably simpler at the point in time that
  // we no longer need to deal with the differences in how delays are treated.
  @each $transition in $transitions {
    // Extract the values from the list
    // (this would be cleaner if nth took a 3rd argument to provide a default value).
    $property: nth($transition, 1);
    $duration: false;
    $timing-function: false;
    $delay: false;
    @if length($transition) > 1 { $duration:        nth($transition, 2); }
    @if length($transition) > 2 { $timing-function: nth($transition, 3); }
    @if length($transition) > 3 { $delay:           nth($transition, 4); $has-delays: true; }

    // If a delay is provided without a timing function
    @if is-time($timing-function) and not $delay { $delay: $timing-function; $timing-function: false; $has-delays: true; }

    // Keep a list of delays in case one is specified
    $delays: append($delays, if($delay, $delay, 0s));

    $webkit-value: append($webkit-value, compact(prefixed-for-transition(-webkit, $property) $duration $timing-function));
       $moz-value: append(   $moz-value, compact(prefixed-for-transition(   -moz, $property) $duration $timing-function $delay));
         $o-value: append(     $o-value, compact(prefixed-for-transition(     -o, $property) $duration $timing-function $delay));
  }

  @if $experimental-support-for-webkit    {       -webkit-transition : $webkit-value;
    // old webkit doesn't support the delay parameter in the shorthand so we progressively enhance it.
    @if $has-delays                       { -webkit-transition-delay : $delays;       } }
  @if $experimental-support-for-mozilla   {          -moz-transition : $moz-value;    }
  @if $experimental-support-for-opera     {            -o-transition : $o-value;      }
                                                          transition : $transitions;
}

// coerce a list to be comma delimited or make a new, empty comma delimited list.
@function comma-list($list: ()) {
  @return join((), $list, comma);
}

// Returns `$property` with the given prefix if it is found in `$transitionable-prefixed-values`.
@function prefixed-for-transition($prefix, $property) {
  @if type-of($property) == list {
    $new-list: comma-list();
    @each $v in $property {
      $new-list: append($new-list, prefixed-for-transition($prefix, $v));
    }
    @return $new-list;
  } @else {
    @if index($transitionable-prefixed-values, $property) {
      @return #{$prefix}-#{$property};
    } @else {
      @return $property;
    }
  }
}

// Checks if the value given is a unit of time.
@function is-time($value) {
  @if type-of($value) == number {
    @return not not index(s ms, unit($value));
  } @else {
    @return false;
  }
}
:@options{ :@has_childrenT:@children[o:Sass::Tree::ImportNode;0;@:@imported_file0;	[ :@imported_filename"shared:
@lineio:Sass::Tree::CommentNode
;@:@value["ï/* CSS Transitions
 * Currently only works in Webkit.
 *
 * * expected in CSS3, FireFox 3.6/7 and Opera Presto 2.3
 * * We'll be prepared.
 *
 * Including this submodule sets following defaults for the mixins:
 *
 *     $default-transition-property : all
 *     $default-transition-duration : 1s
 *     $default-transition-function : false
 *     $default-transition-delay    : false
 *
 * Override them if you like. Timing-function and delay are set to false for browser defaults (ease, 0s). */:
@type:silent;	[ ;io:Sass::Tree::VariableNode:@guarded"!default;@:
@name" default-transition-property:
@expro:Sass::Script::String	;@;"all;:identifier;i;	[ ;io;;"!default;@;" default-transition-duration;o:Sass::Script::Number:@denominator_units[ ;@:@numerator_units["s:@original"1s;i;i;	[ ;io;;"!default;@;" default-transition-function;o:Sass::Script::Bool;@;F;i;	[ ;io;;"!default;@;"default-transition-delay;o;;@;F;i;	[ ;io;;"!default;@;"#transitionable-prefixed-values;o:Sass::Script::List	;@;[o;	;@;"transform;;;io;	;@;"transform-origin;;;i:@separator:
comma;i;	[ ;io;
;@;["}/* One or more properties to transition
 *
 * * for multiple, use a comma-delimited list
 * * also accepts "all" or "none" */;;;	[ ;i!o:Sass::Tree::MixinDefNode;@;"transition-property:@splat0;T;	[u:Sass::Tree::IfNodeÙ[o:Sass::Script::Operation
:@options{ :@operator:eq:@operand2o:Sass::Script::String	;@:@value"string:
@type:identifier:
@linei1:@operand1o:Sass::Script::Funcall:@keywords{ ;@:
@name"type-of:@splat0:
@args[o:Sass::Script::Variable	;@;"property-1:@underscored_name"property_1;i1;i1;i10[o:Sass::Tree::VariableNode:@guarded0;@;"property-1:
@expro;;{ ;@;"unquote;0;[o;	;@;"property-1;"property_1;i1;i1:@children[ ;i1o;;0;@;"properties;o:Sass::Script::Funcall:@keywords{ ;@;"compact;!0:
@args[o:Sass::Script::Variable	;@;"property-1:@underscored_name"property_1;i2o;&	;@;"property-2;'"property_2;i2o;&	;@;"property-3;'"property_3;i2o;&	;@;"property-4;'"property_4;i2o;&	;@;"property-5;'"property_5;i2o;&	;@;"property-6;'"property_6;i2o;&	;@;"property-7;'"property_7;i2o;&	;@;"property-8;'"property_8;i2o;&	;@;"property-9;'"property_9;i2o;&	;@;"property-10;'"property_10;i2;i2;	[ ;i2u;"Å[o:Sass::Script::Variable	:@options{ :
@name"$experimental-support-for-webkit:@underscored_name"$experimental_support_for_webkit:
@linei30[o:Sass::Tree::PropNode:
@tabsi ;@;[" -webkit-transition-property:@prop_syntax:new:@valueo:Sass::Script::Funcall:@keywords{ ;@;"prefixed-for-transition:@splat0:
@args[o:Sass::Script::String	;@;"-webkit:
@type:identifier;	i3o; 	;@;"properties;"properties;	i3;	i3:@children[ ;	i3u;"Á[o:Sass::Script::Variable	:@options{ :
@name"%experimental-support-for-mozilla:@underscored_name"%experimental_support_for_mozilla:
@linei40[o:Sass::Tree::PropNode:
@tabsi ;@;["-moz-transition-property:@prop_syntax:new:@valueo:Sass::Script::Funcall:@keywords{ ;@;"prefixed-for-transition:@splat0:
@args[o:Sass::Script::String	;@;"	-moz:
@type:identifier;	i4o; 	;@;"properties;"properties;	i4;	i4:@children[ ;	i4u;"¹[o:Sass::Script::Variable	:@options{ :
@name"#experimental-support-for-opera:@underscored_name"#experimental_support_for_opera:
@linei50[o:Sass::Tree::PropNode:
@tabsi ;@;["-o-transition-property:@prop_syntax:new:@valueo:Sass::Script::Funcall:@keywords{ ;@;"prefixed-for-transition:@splat0:
@args[o:Sass::Script::String	;@;"-o:
@type:identifier;	i5o; 	;@;"properties;"properties;	i5;	i5:@children[ ;	i5o:Sass::Tree::PropNode:
@tabsi ;@;["transition-property:@prop_syntax:new;o;&	;@;"properties;'"properties;i6;	[ ;i6;%[[o;&;@;"property-1;'"property_1o;&	;@;" default-transition-property;'" default_transition_property;i&[o;&;@;"property-2;'"property_2o;;@;F;i'[o;&;@;"property-3;'"property_3o;;@;F;i([o;&;@;"property-4;'"property_4o;;@;F;i)[o;&;@;"property-5;'"property_5o;;@;F;i*[o;&;@;"property-6;'"property_6o;;@;F;i+[o;&;@;"property-7;'"property_7o;;@;F;i,[o;&;@;"property-8;'"property_8o;;@;F;i-[o;&;@;"property-9;'"property_9o;;@;F;i.[o;&;@;"property-10;'"property_10o;;@;F;i/;i0o;
;@;["¡/* One or more durations in seconds
 *
 * * for multiple, use a comma-delimited list
 * * these durations will affect the properties in the same list position */;;;	[ ;i9o; ;@;"transition-duration;!0;T;	[u;"Ù[o:Sass::Script::Operation
:@options{ :@operator:eq:@operand2o:Sass::Script::String	;@:@value"string:
@type:identifier:
@lineiI:@operand1o:Sass::Script::Funcall:@keywords{ ;@:
@name"type-of:@splat0:
@args[o:Sass::Script::Variable	;@;"duration-1:@underscored_name"duration_1;iI;iI;iI0[o:Sass::Tree::VariableNode:@guarded0;@;"duration-1:
@expro;;{ ;@;"unquote;0;[o;	;@;"duration-1;"duration_1;iI;iI:@children[ ;iIo;;0;@;"durations;o;#;${ ;@;"compact;!0;%[o;&	;@;"duration-1;'"duration_1;iJo;&	;@;"duration-2;'"duration_2;iJo;&	;@;"duration-3;'"duration_3;iJo;&	;@;"duration-4;'"duration_4;iJo;&	;@;"duration-5;'"duration_5;iJo;&	;@;"duration-6;'"duration_6;iJo;&	;@;"duration-7;'"duration_7;iJo;&	;@;"duration-8;'"duration_8;iJo;&	;@;"duration-9;'"duration_9;iJo;&	;@;"duration-10;'"duration_10;iJ;iJ;	[ ;iJo:Sass::Tree::MixinNode;${ ;@;"experimental;!0;	[ ;%[o;	;@;"transition-duration;;;iKo;&	;@;"durations;'"durations;iKo;	;@;"	-moz;;;iLo;	;@;"-webkit;;;iLo;	;@;"-o;;;iLo:!Sass::Script::UnaryOperation	:@operando;	;@;"-ms;;;iL;@:@operator:not;iLo;-	;.o;	;@;"-khtml;;;iL;@;/;0;iLo;	;@;"official;;;iL;iM;%[[o;&;@;"duration-1;'"duration_1o;&	;@;" default-transition-duration;'" default_transition_duration;i>[o;&;@;"duration-2;'"duration_2o;;@;F;i?[o;&;@;"duration-3;'"duration_3o;;@;F;i@[o;&;@;"duration-4;'"duration_4o;;@;F;iA[o;&;@;"duration-5;'"duration_5o;;@;F;iB[o;&;@;"duration-6;'"duration_6o;;@;F;iC[o;&;@;"duration-7;'"duration_7o;;@;F;iD[o;&;@;"duration-8;'"duration_8o;;@;F;iE[o;&;@;"duration-9;'"duration_9o;;@;F;iF[o;&;@;"duration-10;'"duration_10o;;@;F;iG;iHo;
;@;["õ/* One or more timing functions
 *
 * * [ ease | linear | ease-in | ease-out | ease-in-out | cubic-bezier(x1, y1, x2, y2)]
 * * For multiple, use a comma-delimited list
 * * These functions will effect the properties in the same list position */;;;	[ ;iPo; ;@;"transition-timing-function;!0;T;	[o;;0;@;"function-1;o;#;${ ;@;"unquote;!0;%[o;&	;@;"function-1;'"function_1;ia;ia;	[ ;iao;;0;@;"functions;o;#;${ ;@;"compact;!0;%[o;&	;@;"function-1;'"function_1;ibo;&	;@;"function-2;'"function_2;ibo;&	;@;"function-3;'"function_3;ibo;&	;@;"function-4;'"function_4;ibo;&	;@;"function-5;'"function_5;ibo;&	;@;"function-6;'"function_6;ibo;&	;@;"function-7;'"function_7;ibo;&	;@;"function-8;'"function_8;ibo;&	;@;"function-9;'"function_9;ibo;&	;@;"function-10;'"function_10;ib;ib;	[ ;ibo;,;${ ;@;"experimental;!0;	[ ;%[o;	;@;"transition-timing-function;;;ico;&	;@;"functions;'"functions;ico;	;@;"	-moz;;;ido;	;@;"-webkit;;;ido;	;@;"-o;;;ido;-	;.o;	;@;"-ms;;;id;@;/;0;ido;-	;.o;	;@;"-khtml;;;id;@;/;0;ido;	;@;"official;;;id;ie;%[[o;&;@;"function-1;'"function_1o;&	;@;" default-transition-function;'" default_transition_function;iV[o;&;@;"function-2;'"function_2o;;@;F;iW[o;&;@;"function-3;'"function_3o;;@;F;iX[o;&;@;"function-4;'"function_4o;;@;F;iY[o;&;@;"function-5;'"function_5o;;@;F;iZ[o;&;@;"function-6;'"function_6o;;@;F;i[[o;&;@;"function-7;'"function_7o;;@;F;i\[o;&;@;"function-8;'"function_8o;;@;F;i][o;&;@;"function-9;'"function_9o;;@;F;i^[o;&;@;"function-10;'"function_10o;;@;F;i_;i`o;
;@;["¦/* One or more transition-delays in seconds
 *
 * * for multiple, use a comma-delimited list
 * * these delays will effect the properties in the same list position */;;;	[ ;iho; ;@;"transition-delay;!0;T;	[u;"Ê[o:Sass::Script::Operation
:@options{ :@operator:eq:@operand2o:Sass::Script::String	;@:@value"string:
@type:identifier:
@lineix:@operand1o:Sass::Script::Funcall:@keywords{ ;@:
@name"type-of:@splat0:
@args[o:Sass::Script::Variable	;@;"delay-1:@underscored_name"delay_1;ix;ix;ix0[o:Sass::Tree::VariableNode:@guarded0;@;"delay-1:
@expro;;{ ;@;"unquote;0;[o;	;@;"delay-1;"delay_1;ix;ix:@children[ ;ixo;;0;@;"delays;o;#;${ ;@;"compact;!0;%[o;&	;@;"delay-1;'"delay_1;iyo;&	;@;"delay-2;'"delay_2;iyo;&	;@;"delay-3;'"delay_3;iyo;&	;@;"delay-4;'"delay_4;iyo;&	;@;"delay-5;'"delay_5;iyo;&	;@;"delay-6;'"delay_6;iyo;&	;@;"delay-7;'"delay_7;iyo;&	;@;"delay-8;'"delay_8;iyo;&	;@;"delay-9;'"delay_9;iyo;&	;@;"delay-10;'"delay_10;iy;iy;	[ ;iyo;,;${ ;@;"experimental;!0;	[ ;%[o;	;@;"transition-delay;;;izo;&	;@;"delays;'"delays;izo;	;@;"	-moz;;;i{o;	;@;"-webkit;;;i{o;	;@;"-o;;;i{o;-	;.o;	;@;"-ms;;;i{;@;/;0;i{o;-	;.o;	;@;"-khtml;;;i{;@;/;0;i{o;	;@;"official;;;i{;i|;%[[o;&;@;"delay-1;'"delay_1o;&	;@;"default-transition-delay;'"default_transition_delay;im[o;&;@;"delay-2;'"delay_2o;;@;F;in[o;&;@;"delay-3;'"delay_3o;;@;F;io[o;&;@;"delay-4;'"delay_4o;;@;F;ip[o;&;@;"delay-5;'"delay_5o;;@;F;iq[o;&;@;"delay-6;'"delay_6o;;@;F;ir[o;&;@;"delay-7;'"delay_7o;;@;F;is[o;&;@;"delay-8;'"delay_8o;;@;F;it[o;&;@;"delay-9;'"delay_9o;;@;F;iu[o;&;@;"delay-10;'"delay_10o;;@;F;iv;iwo;
;@;["*/* Transition all-in-one shorthand */;;;	[ ;io; ;@;"single-transition;!0;T;	[o;,;${ ;@;"transition;!0;	[ ;%[o;#;${ ;@;"compact;!0;%[o;	;@;[	o;&	;@;"property;'"property;io;&	;@;"duration;'"duration;io;&	;@;"function;'"function;io;&	;@;"
delay;'"
delay;i;:
space;i;i;i;%[	[o;&;@;"property;'"propertyo;&	;@;" default-transition-property;'" default_transition_property;i}[o;&;@;"duration;'"durationo;&	;@;" default-transition-duration;'" default_transition_duration;i~[o;&;@;"function;'"functiono;&	;@;" default-transition-function;'" default_transition_function;i[o;&;@;"
delay;'"
delayo;&	;@;"default-transition-delay;'"default_transition_delay;i;io; ;@;"transition;!0;T;	[u;"÷[o:Sass::Script::Operation
:@options{ :@operator:eq:@operand2o:Sass::Script::String	;@:@value"default:
@type:identifier:
@linei:@operand1o:Sass::Script::Variable	;@:
@name"transition-1:@underscored_name"transition_1;i;i0[o:Sass::Tree::VariableNode:@guarded0;@;"transition-1:
@expro:Sass::Script::Funcall:@keywords{ ;@;"compact:@splat0:
@args[o:Sass::Script::List	;@;[	o;	;@;" default-transition-property;" default_transition_property;io;	;@;" default-transition-duration;" default_transition_duration;io;	;@;" default-transition-function;" default_transition_function;io;	;@;"default-transition-delay;"default_transition_delay;i:@separator:
space;i;i:@children[ ;io;;0;@;"transitions;o;;@;F;i;	[ ;iu;"[o:Sass::Script::Operation
:@options{ :@operator:and:@operand2o; 
;@;:eq;	o:Sass::Script::String	;@:@value"	list:
@type:identifier:
@linei:@operand1o:Sass::Script::Funcall:@keywords{ ;@:
@name"type-of:@splat0:
@args[o;;{ ;@;"nth;0;[o:Sass::Script::Variable	;@;"transition-1:@underscored_name"transition_1;io:Sass::Script::Number:@denominator_units[ ;@:@numerator_units[ :@original"1;i;i;i;i;i;o; 
;@;;
;	o;	;@;"	list;;;i;o;;{ ;@;"type-of;0;[o;	;@;"transition-1;"transition_1;i;i;i;iu:Sass::Tree::IfNode¤[00[o:Sass::Tree::VariableNode:@guarded0:@options{ :
@name"transitions:
@expro:Sass::Script::Funcall:@keywords{ ;@;"compact:@splat0:
@args[o:Sass::Script::Variable	;@;"transition-1:@underscored_name"transition_1:
@lineio;	;@;"transition-2;"transition_2;io;	;@;"transition-3;"transition_3;io;	;@;"transition-4;"transition_4;io;	;@;"transition-5;"transition_5;io;	;@;"transition-6;"transition_6;io;	;@;"transition-7;"transition_7;io;	;@;"transition-8;"transition_8;io;	;@;"transition-9;"transition_9;io;	;@;"transition-10;"transition_10;i;i:@children[ ;i[o:Sass::Tree::VariableNode:@guarded0;@;"transitions:
@expro;;{ ;@;"	join;0;[o;	;@;"transition-1;"transition_1;io;;{ ;@;"compact;0;[o;	;@;"transition-2;"transition_2;io;	;@;"transition-3;"transition_3;io;	;@;"transition-4;"transition_4;io;	;@;"transition-5;"transition_5;io;	;@;"transition-6;"transition_6;io;	;@;"transition-7;"transition_7;io;	;@;"transition-8;"transition_8;io;	;@;"transition-9;"transition_9;io;	;@;"transition-10;"transition_10;i;io;	;@;"
comma;;;i;i:@children[ ;io;;0;@;"delays;o;#;${ ;@;"comma-list;!0;%[ ;i;	[ ;io;;0;@;"has-delays;o;;@;F;i;	[ ;io;;0;@;"webkit-value;o;#;${ ;@;"comma-list;!0;%[ ;i;	[ ;io;;0;@;"moz-value;o;#;${ ;@;"comma-list;!0;%[ ;i;	[ ;io;;0;@;"o-value;o;#;${ ;@;"comma-list;!0;%[ ;i;	[ ;io;
;@;["/* This block can be made considerably simpler at the point in time that
 * we no longer need to deal with the differences in how delays are treated. */;;;	[ ;i o:Sass::Tree::EachNode:	@var"transition;@:
@listo;&	;@;"transitions;'"transitions;i¢;T;	[o;
;@;["}/* Extract the values from the list
 * (this would be cleaner if nth took a 3rd argument to provide a default value). */;;;	[ ;i£o;;0;@;"property;o;#;${ ;@;"nth;!0;%[o;&	;@;"transition;'"transition;i¥o;;[ ;@;[ ;"1;i;i¥;i¥;	[ ;i¥o;;0;@;"duration;o;;@;F;i¦;	[ ;i¦o;;0;@;"timing-function;o;;@;F;i§;	[ ;i§o;;0;@;"
delay;o;;@;F;i¨;	[ ;i¨u;"[o:Sass::Script::Operation
:@options{ :@operator:gt:@operand2o:Sass::Script::Number:@denominator_units[ ;@:@numerator_units[ :@original"1:@valuei:
@linei©:@operand1o:Sass::Script::Funcall:@keywords{ ;@:
@name"length:@splat0:
@args[o:Sass::Script::Variable	;@;"transition:@underscored_name"transition;i©;i©;i©0[o:Sass::Tree::VariableNode:@guarded0;@;"duration:
@expro;;{ ;@;"nth;0;[o;	;@;"transition;"transition;i©o;
;@	;@;[ ;"2;i;i©;i©:@children[ ;i©u;"[o:Sass::Script::Operation
:@options{ :@operator:gt:@operand2o:Sass::Script::Number:@denominator_units[ ;@:@numerator_units[ :@original"2:@valuei:
@lineiª:@operand1o:Sass::Script::Funcall:@keywords{ ;@:
@name"length:@splat0:
@args[o:Sass::Script::Variable	;@;"transition:@underscored_name"transition;iª;iª;iª0[o:Sass::Tree::VariableNode:@guarded0;@;"timing-function:
@expro;;{ ;@;"nth;0;[o;	;@;"transition;"transition;iªo;
;@	;@;[ ;"3;i;iª;iª:@children[ ;iªu;"Y[o:Sass::Script::Operation
:@options{ :@operator:gt:@operand2o:Sass::Script::Number:@denominator_units[ ;@:@numerator_units[ :@original"3:@valuei:
@linei«:@operand1o:Sass::Script::Funcall:@keywords{ ;@:
@name"length:@splat0:
@args[o:Sass::Script::Variable	;@;"transition:@underscored_name"transition;i«;i«;i«0[o:Sass::Tree::VariableNode:@guarded0;@;"
delay:
@expro;;{ ;@;"nth;0;[o;	;@;"transition;"transition;i«o;
;@	;@;[ ;"4;i	;i«;i«:@children[ ;i«o;;0;@;"has-delays;o:Sass::Script::Bool;@;T;i«;[ ;i«o;
;@;[";/* If a delay is provided without a timing function */;;;	[ ;i­u;"g[o:Sass::Script::Operation
:@options{ :@operator:and:@operand2o:!Sass::Script::UnaryOperation	:@operando:Sass::Script::Variable	;@:
@name"
delay:@underscored_name"
delay:
@linei®;@;:not;i®:@operand1o:Sass::Script::Funcall:@keywords{ ;@;"is-time:@splat0:
@args[o;	;@;"timing-function;"timing_function;i®;i®;i®0[o:Sass::Tree::VariableNode:@guarded0;@;"
delay:
@expro;	;@;"timing-function;"timing_function;i®:@children[ ;i®o;;0;@;"timing-function;o:Sass::Script::Bool;@:@valueF;i®;[ ;i®o;;0;@;"has-delays;o;;@;T;i®;[ ;i®o;
;@;["9/* Keep a list of delays in case one is specified */;;;	[ ;i°o;;0;@;"delays;o;#;${ ;@;"append;!0;%[o;&	;@;"delays;'"delays;i±o;#;${ ;@;"if;!0;%[o;&	;@;"
delay;'"
delay;i±o;&	;@;"
delay;'"
delay;i±o;;[ ;@;["s;"0s;i ;i±;i±;i±;	[ ;i±o;;0;@;"webkit-value;o;#;${ ;@;"append;!0;%[o;&	;@;"webkit-value;'"webkit_value;i³o;#;${ ;@;"compact;!0;%[o;	;@;[o;#;${ ;@;"prefixed-for-transition;!0;%[o;	;@;"-webkit;;;i³o;&	;@;"property;'"property;i³;i³o;&	;@;"duration;'"duration;i³o;&	;@;"timing-function;'"timing_function;i³;;1;i³;i³;i³;	[ ;i³o;;0;@;"moz-value;o;#;${ ;@;"append;!0;%[o;&	;@;"moz-value;'"moz_value;i´o;#;${ ;@;"compact;!0;%[o;	;@;[	o;#;${ ;@;"prefixed-for-transition;!0;%[o;	;@;"	-moz;;;i´o;&	;@;"property;'"property;i´;i´o;&	;@;"duration;'"duration;i´o;&	;@;"timing-function;'"timing_function;i´o;&	;@;"
delay;'"
delay;i´;;1;i´;i´;i´;	[ ;i´o;;0;@;"o-value;o;#;${ ;@;"append;!0;%[o;&	;@;"o-value;'"o_value;iµo;#;${ ;@;"compact;!0;%[o;	;@;[	o;#;${ ;@;"prefixed-for-transition;!0;%[o;	;@;"-o;;;iµo;&	;@;"property;'"property;iµ;iµo;&	;@;"duration;'"duration;iµo;&	;@;"timing-function;'"timing_function;iµo;&	;@;"
delay;'"
delay;iµ;;1;iµ;iµ;iµ;	[ ;iµ;i¢u;"Ý[o:Sass::Script::Variable	:@options{ :
@name"$experimental-support-for-webkit:@underscored_name"$experimental_support_for_webkit:
@linei¸0[o:Sass::Tree::PropNode:
@tabsi ;@;["-webkit-transition:@prop_syntax:new:@valueo; 	;@;"webkit-value;"webkit_value;	i¸:@children[ ;	i¸o:Sass::Tree::CommentNode
;@;["j/* old webkit doesn't support the delay parameter in the shorthand so we progressively enhance it. */:
@type:silent;[ ;	i¹u:Sass::Tree::IfNodeú[o:Sass::Script::Variable	:@options{ :
@name"has-delays:@underscored_name"has_delays:
@lineiº0[o:Sass::Tree::PropNode:
@tabsi ;@;["-webkit-transition-delay:@prop_syntax:new:@valueo; 	;@;"delays;"delays;	iº:@children[ ;	iºu;"#[o:Sass::Script::Variable	:@options{ :
@name"%experimental-support-for-mozilla:@underscored_name"%experimental_support_for_mozilla:
@linei»0[o:Sass::Tree::PropNode:
@tabsi ;@;["-moz-transition:@prop_syntax:new:@valueo; 	;@;"moz-value;"moz_value;	i»:@children[ ;	i»u;"[o:Sass::Script::Variable	:@options{ :
@name"#experimental-support-for-opera:@underscored_name"#experimental_support_for_opera:
@linei¼0[o:Sass::Tree::PropNode:
@tabsi ;@;["-o-transition:@prop_syntax:new:@valueo; 	;@;"o-value;"o_value;	i¼:@children[ ;	i¼o;(;)i ;@;["transition;*;+;o;&	;@;"transitions;'"transitions;i½;	[ ;i½;%[[o;&;@;"transition-1;'"transition_1o;	;@;"default;;;i[o;&;@;"transition-2;'"transition_2o;;@;F;i[o;&;@;"transition-3;'"transition_3o;;@;F;i[o;&;@;"transition-4;'"transition_4o;;@;F;i[o;&;@;"transition-5;'"transition_5o;;@;F;i[o;&;@;"transition-6;'"transition_6o;;@;F;i[o;&;@;"transition-7;'"transition_7o;;@;F;i[o;&;@;"transition-8;'"transition_8o;;@;F;i[o;&;@;"transition-9;'"transition_9o;;@;F;i[o;&;@;"transition-10;'"transition_10o;;@;F;i;io;
;@;["Y/* coerce a list to be comma delimited or make a new, empty comma delimited list. */;;;	[ ;iÀo:Sass::Tree::FunctionNode;@;"comma-list;!0;T;	[o:Sass::Tree::ReturnNode	;@;o;#;${ ;@;"	join;!0;%[o;	;@;[ ;;1;iÂo;&	;@;"	list;'"	list;iÂo;	;@;"
comma;;;iÂ;iÂ;	[ ;iÂ;%[[o;&;@;"	list;'"	listo;	;@;[ ;;1;iÁ;iÁo;
;@;["i/* Returns `$property` with the given prefix if it is found in `$transitionable-prefixed-values`. */;;;	[ ;iÅo;5;@;"prefixed-for-transition;!0;T;	[u;"®[o:Sass::Script::Operation
:@options{ :@operator:eq:@operand2o:Sass::Script::String	;@:@value"	list:
@type:identifier:
@lineiÇ:@operand1o:Sass::Script::Funcall:@keywords{ ;@:
@name"type-of:@splat0:
@args[o:Sass::Script::Variable	;@;"property:@underscored_name"property;iÇ;iÇ;iÇu:Sass::Tree::IfNodeY[00[u:Sass::Tree::IfNode9[o:Sass::Script::Funcall:@keywords{ :@options{ :
@name"
index:@splat0:
@args[o:Sass::Script::Variable	;@;"#transitionable-prefixed-values:@underscored_name"#transitionable_prefixed_values:
@lineiÎo;	;@;"property;"property;iÎ;iÎu:Sass::Tree::IfNode[00[o:Sass::Tree::ReturnNode	:@options{ :
@expro:Sass::Script::Variable	;@:
@name"property:@underscored_name"property:
@lineiÑ:@children[ ;iÑ[o:Sass::Tree::ReturnNode	;@:
@expro: Sass::Script::Interpolation:@whitespace_beforei;@:@aftero;;0;@;0:@originally_textF:	@mido;	;@;"property;"property;iÏ:@whitespace_after0;iÏ:@beforeo;;0;@;0;:originally_text;o:Sass::Script::String	;@:@value"-:
@type:identifier;iÏ;F;iÏ;0;F;o;	;@;"prefix;"prefix;iÏ;0;iÏ;0:@children[ ;iÏ[o:Sass::Tree::VariableNode:@guarded0;@;"new-list:
@expro;;{ ;@;"comma-list;0;[ ;iÈ:@children[ ;iÈo:Sass::Tree::EachNode:	@var"v;@:
@listo;	;@;"property;"property;iÉ:@has_childrenT;[o;;0;@;"new-list;o;;{ ;@;"append;0;[o;	;@;"new-list;"new_list;iÊo;;{ ;@;"prefixed-for-transition;0;[o;	;@;"prefix;"prefix;iÊo;	;@;"v;"v;iÊ;iÊ;iÊ;[ ;iÊ;iÉo:Sass::Tree::ReturnNode	;@;o;	;@;"new-list;"new_list;iÌ;[ ;iÌ;%[[o;&;@;"prefix;'"prefix0[o;&;@;"property;'"property0;iÆo;
;@;["7/* Checks if the value given is a unit of time. */;;;	[ ;iÖo;5;@;"is-time;!0;T;	[u;"[o:Sass::Script::Operation
:@options{ :@operator:eq:@operand2o:Sass::Script::String	;@:@value"number:
@type:identifier:
@lineiØ:@operand1o:Sass::Script::Funcall:@keywords{ ;@:
@name"type-of:@splat0:
@args[o:Sass::Script::Variable	;@;"
value:@underscored_name"
value;iØ;iØ;iØu:Sass::Tree::IfNodey[00[o:Sass::Tree::ReturnNode	:@options{ :
@expro:Sass::Script::Bool;@:@valueF:
@lineiÛ:@children[ ;
iÛ[o:Sass::Tree::ReturnNode	;@:
@expro:!Sass::Script::UnaryOperation	:@operando;	;o;;{ ;@;"
index;0;[o:Sass::Script::List	;@;[o;
	;@;"s;;;iÙo;
	;@;"ms;;;iÙ:@separator:
space;iÙo;;{ ;@;"	unit;0;[o;	;@;"
value;"
value;iÙ;iÙ;iÙ;@;:not;iÙ;@;;;iÙ:@children[ ;iÙ;%[[o;&;@;"
value;'"
value0;i×;i